{{- if .Values.stateWatcher.enabled -}}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "kg-rca-agent.fullname" . }}-state-watcher
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "kg-rca-agent.labels" . | nindent 4 }}
    component: state-watcher
spec:
  replicas: {{ .Values.stateWatcher.replicaCount }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  selector:
    matchLabels:
      {{- include "kg-rca-agent.selectorLabels" . | nindent 6 }}
      component: state-watcher
  template:
    metadata:
      labels:
        {{- include "kg-rca-agent.selectorLabels" . | nindent 8 }}
        component: state-watcher
      annotations:
        checksum/config: {{ toYaml .Values.client | sha256sum }}
        checksum/secret: {{ toYaml .Values.client.kafka.sasl | sha256sum }}
    spec:
      serviceAccountName: {{ .Values.serviceAccount.name }}
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
        fsGroup: 65534
      containers:
        - name: state-watcher
          image: "{{ .Values.stateWatcher.image.repository }}:{{ .Values.stateWatcher.image.tag }}"
          imagePullPolicy: {{ .Values.stateWatcher.image.pullPolicy }}
          env:
            # Configuration from ConfigMap
            - name: CLIENT_ID
              valueFrom:
                configMapKeyRef:
                  name: {{ include "kg-rca-agent.fullname" . }}-config
                  key: CLIENT_ID
            - name: CLUSTER_NAME
              valueFrom:
                configMapKeyRef:
                  name: {{ include "kg-rca-agent.fullname" . }}-config
                  key: CLUSTER_NAME
            - name: KAFKA_BOOTSTRAP
              valueFrom:
                configMapKeyRef:
                  name: {{ include "kg-rca-agent.fullname" . }}-config
                  key: KAFKA_BOOTSTRAP
            - name: KAFKA_BROKERS
              valueFrom:
                configMapKeyRef:
                  name: {{ include "kg-rca-agent.fullname" . }}-config
                  key: KAFKA_BROKERS
            - name: KAFKA_CLIENT_ID
              valueFrom:
                configMapKeyRef:
                  name: {{ include "kg-rca-agent.fullname" . }}-config
                  key: KAFKA_CLIENT_ID
            - name: TOPIC_STATE
              valueFrom:
                configMapKeyRef:
                  name: {{ include "kg-rca-agent.fullname" . }}-config
                  key: TOPIC_STATE
            - name: TOPIC_TOPO
              valueFrom:
                configMapKeyRef:
                  name: {{ include "kg-rca-agent.fullname" . }}-config
                  key: TOPIC_TOPO
            - name: KAFKA_TOPIC_RESOURCE
              valueFrom:
                configMapKeyRef:
                  name: {{ include "kg-rca-agent.fullname" . }}-config
                  key: KAFKA_TOPIC_RESOURCE
            - name: KAFKA_TOPIC_TOPOLOGY
              valueFrom:
                configMapKeyRef:
                  name: {{ include "kg-rca-agent.fullname" . }}-config
                  key: KAFKA_TOPIC_TOPOLOGY
            - name: WATCH_NAMESPACES
              valueFrom:
                configMapKeyRef:
                  name: {{ include "kg-rca-agent.fullname" . }}-config
                  key: WATCH_NAMESPACES
            - name: KAFKA_SASL_ENABLED
              valueFrom:
                configMapKeyRef:
                  name: {{ include "kg-rca-agent.fullname" . }}-config
                  key: KAFKA_SASL_ENABLED
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: PROM_URL
              valueFrom:
                configMapKeyRef:
                  name: {{ include "kg-rca-agent.fullname" . }}-config
                  key: PROM_URL
                  optional: true
            - name: TOPIC_PROM_TARGETS
              valueFrom:
                configMapKeyRef:
                  name: {{ include "kg-rca-agent.fullname" . }}-config
                  key: TOPIC_PROM_TARGETS
                  optional: true
            - name: LEASE_NAMESPACE
              valueFrom:
                configMapKeyRef:
                  name: {{ include "kg-rca-agent.fullname" . }}-config
                  key: LEASE_NAMESPACE
            - name: LEASE_NAME
              valueFrom:
                configMapKeyRef:
                  name: {{ include "kg-rca-agent.fullname" . }}-config
                  key: LEASE_NAME
            {{- if .Values.client.kafka.sasl.enabled }}
            # Kafka SASL Credentials from Secret
            - name: KAFKA_SASL_MECHANISM
              valueFrom:
                secretKeyRef:
                  name: {{ include "kg-rca-agent.fullname" . }}-secrets
                  key: kafka-sasl-mechanism
            - name: KAFKA_SASL_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ include "kg-rca-agent.fullname" . }}-secrets
                  key: kafka-sasl-username
            - name: KAFKA_SASL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "kg-rca-agent.fullname" . }}-secrets
                  key: kafka-sasl-password
            {{- end }}
          resources:
            {{- toYaml .Values.stateWatcher.resources | nindent 12 }}
      restartPolicy: Always
{{- end }}
