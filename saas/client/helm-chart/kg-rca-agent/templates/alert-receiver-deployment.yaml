{{- if .Values.alertReceiver.enabled -}}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "kg-rca-agent.fullname" . }}-alert-receiver
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "kg-rca-agent.labels" . | nindent 4 }}
    component: alert-receiver
spec:
  replicas: {{ .Values.alertReceiver.replicaCount }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  selector:
    matchLabels:
      {{- include "kg-rca-agent.selectorLabels" . | nindent 6 }}
      component: alert-receiver
  template:
    metadata:
      labels:
        {{- include "kg-rca-agent.selectorLabels" . | nindent 8 }}
        component: alert-receiver
      annotations:
        checksum/config: {{ toYaml .Values.client | sha256sum }}
        checksum/secret: {{ toYaml .Values.client.kafka.sasl | sha256sum }}
        prometheus.io/scrape: "true"
        prometheus.io/port: "9093"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: {{ .Values.serviceAccount.name }}
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
        fsGroup: 65534
      containers:
        - name: alert-receiver
          image: "{{ .Values.alertReceiver.image.repository }}:{{ .Values.alertReceiver.image.tag }}"
          imagePullPolicy: {{ .Values.alertReceiver.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 9093
              protocol: TCP
          env:
            # Configuration from ConfigMap
            - name: CLIENT_ID
              valueFrom:
                configMapKeyRef:
                  name: {{ include "kg-rca-agent.fullname" . }}-config
                  key: CLIENT_ID
            - name: KAFKA_BROKERS
              valueFrom:
                configMapKeyRef:
                  name: {{ include "kg-rca-agent.fullname" . }}-config
                  key: KAFKA_BROKERS
            - name: KAFKA_TOPIC
              valueFrom:
                configMapKeyRef:
                  name: {{ include "kg-rca-agent.fullname" . }}-config
                  key: KAFKA_TOPIC_ALERTS
            - name: KAFKA_SASL_ENABLED
              valueFrom:
                configMapKeyRef:
                  name: {{ include "kg-rca-agent.fullname" . }}-config
                  key: KAFKA_SASL_ENABLED
            {{- if .Values.client.kafka.sasl.enabled }}
            # Kafka SASL Credentials from Secret
            - name: KAFKA_SASL_MECHANISM
              valueFrom:
                secretKeyRef:
                  name: {{ include "kg-rca-agent.fullname" . }}-secrets
                  key: kafka-sasl-mechanism
            - name: KAFKA_SASL_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ include "kg-rca-agent.fullname" . }}-secrets
                  key: kafka-sasl-username
            - name: KAFKA_SASL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "kg-rca-agent.fullname" . }}-secrets
                  key: kafka-sasl-password
            {{- end }}
            # Application Configuration
            - name: PORT
              value: "9093"
            - name: LOG_LEVEL
              value: "info"
          resources:
            {{- toYaml .Values.alertReceiver.resources | nindent 12 }}
          livenessProbe:
            httpGet:
              path: /healthz
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /ready
              port: http
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
      restartPolicy: Always
{{- end }}
