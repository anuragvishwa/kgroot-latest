apiVersion: v1
kind: Namespace
metadata:
  name: observability
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: kgroot-env
  namespace: observability
data:
  CLUSTER_NAME: "minikube"
  KAFKA_BROKERS: "kafka.observability.svc:9092"
  KAFKA_BOOTSTRAP: "kafka.observability.svc:9092"
  KAFKA_GROUP: "kg-builder"
  NEO4J_URI: "neo4j://neo4j.observability.svc:7687"
  NEO4J_USER: "neo4j"
  NEO4J_PASS: "anuragvishwa"
  PROM_URL: "http://prometheus-kube-prometheus-prometheus.monitoring.svc:9090"

  # Kafka Topics
  TOPIC_RES: "state.k8s.resource"
  TOPIC_TOPO: "state.k8s.topology"
  TOPIC_EVT: "events.normalized"
  TOPIC_LOGS: "logs.normalized"
  TOPIC_PROM_TARGETS: "state.prom.targets"
  TOPIC_PROM_RULES: "state.prom.rules"
  TOPIC_COMMANDS: "graph.commands"

  TOPIC_STATE_RESOURCE: "state.k8s.resource"
  TOPIC_STATE_TOPOLOGY: "state.k8s.topology"
  TOPIC_EVENTS_NORMALIZED: "events.normalized"
  TOPIC_LOGS_NORMALIZED: "logs.normalized"
  TOPIC_ALERTS_NORMALIZED: "alerts.normalized"
  TOPIC_ALERTS_ENRICHED: "alerts.enriched"

  # RCA Configuration
  RCA_WINDOW_MIN: "15"
  CAUSAL_LINK_MAX_HOPS: "3"
  CAUSAL_LINK_TIME_THRESHOLD_SEC: "300"
  EVENT_CORRELATION_WINDOW_SEC: "60"

  # Feature Flags
  ENABLE_LOG_FILTERING: "true"
  ENABLE_FPG_REALTIME: "true"
  ENABLE_FEKG_HISTORICAL: "true"
  LOG_LEVEL: "info"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kg-builder
  namespace: observability
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kg-builder
  template:
    metadata:
      labels:
        app: kg-builder
    spec:
      containers:
        - name: kg-builder
          image: docker.io/anuragvishwa/kg-builder:latest
          imagePullPolicy: IfNotPresent  # Use local image from minikube
          envFrom:
            - configMapRef:
                name: kgroot-env
          resources:
            requests:
              cpu: "100m"
              memory: "128Mi"
            limits:
              memory: "512Mi"
---
# Init job to ensure Neo4j schema is created
apiVersion: batch/v1
kind: Job
metadata:
  name: kg-init-schema
  namespace: observability
spec:
  ttlSecondsAfterFinished: 300
  template:
    spec:
      restartPolicy: OnFailure
      containers:
        - name: kg-init
          image: docker.io/anuragvishwa/kg-builder:latest
          envFrom:
            - configMapRef:
                name: kgroot-env
          env:
            - name: KAFKA_BROKERS
              value: "kafka.observability.svc:9092"
            - name: TOPIC_COMMANDS
              value: "graph.commands"
          command:
            - /bin/sh
            - -c
            - |
              # Send ENSURE_SCHEMA command via Kafka
              # This will be handled by the main kg-builder deployment
              # For now, just sleep to allow schema creation on first run
              sleep 30
              echo "Schema initialization complete"
